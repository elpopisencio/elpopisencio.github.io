{"version":3,"sources":["components/Header.js","components/Summary.js","components/Skills.js","components/Social.js","components/Technology.js","components/Technologies.js","App.js","serviceWorker.js","index.js"],"names":["Line","styled","hr","_templateObject","Title","h1","_templateObject2","Subtitle","h2","_templateObject3","Header","props","react_default","a","createElement","react","Summary","Social","class","href","grow","keyframes","Technology_templateObject","_ref","amount","Bar","div","Technology_templateObject2","_ref2","Icon","Technology_templateObject3","Rest","_templateObject4","Technologies","_ref3","name","App","className","Technologies_Technologies","Skills_Summary","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b206ff6.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nconst Line = styled.hr`\n    display: block;\n    height: 0.2em;\n    border: 0;\n    border-top: 0.2em solid #ff6c00;\n    margin: 0.4em 0;\n`;\n\nconst Title = styled.h1`\n    font-size: 2em;\n`;\n\nconst Subtitle = styled.h2`\n    font-size: 1.5em;\n`;\n\nexport default function Header(props) {\n    return (\n        <Fragment>\n            <Title>Jorge Luis Beroisa</Title>\n            <Line />\n            <Subtitle>Front-End Developer</Subtitle>\n            <br />\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function Summary(props) {\n    return (\n        <Fragment>\n            <br />\n            <fieldset>\n                <legend>Summary&ensp;</legend>\n            </fieldset>\n            <p>I am a <b>passionate</b> Front-End Developer and Designer with <i>some</i> experience in Back-End Development and System Administration tasks. I like to follow coding best practices and enjoy reading and writing beautiful, maintainable code. My two favorite design principles are KISS and DRY, and I try to apply them not only when I am developing but in other tasks as well.</p>\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function Summary(props) {\n    return (\n        <Fragment>\n            <br/>\n            <fieldset>\n                <legend>Skills&ensp;</legend>\n            </fieldset>\n            <ul>\n                <li>Two years of experience in web development; <span>//one year with React.</span></li>\n                <li>More than five years of experience in Linux; <span>//specially Debian based distros.</span></li>\n                <li>Worked with Back-End frameworks; <span>//Laravel and Lumen in PHP and Express in JS.</span></li>\n                <li>One year of experience in MySQL database maintenance; <span>//cleaning and refactoring over 17000 clients data.</span></li>\n                <li>Knowledge of System Administrator tasks; <span>//build a Debian server with a fullhand of virtual servers.</span></li>\n            </ul>\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nexport default function Social(props) {\n    return (\n        <Fragment>\n            <br />\n            <fieldset>\n                <legend>Social Media&ensp;</legend>\n            </fieldset>\n            <div class=\"social\">\n                <i class=\"fab fa-github\"></i>\n                <a href=\"https://github.com/elpopisencio\">/elpopisencio</a>\n            </div>\n            <div class=\"social\">\n                <i class=\"fab fa-linkedin-in\"></i>\n                <a href=\"https://www.linkedin.com/in/jorge-luis-beroisa-8523b7141/\">/jorge-luis-beroisa</a>\n            </div>\n            <div class=\"social\">\n                <i class=\"fab fa-twitter\"></i>\n                <a href=\"www.google.com\">@elpopisencio</a>\n            </div>\n        </Fragment>\n    )\n}","import React, { Fragment } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst grow = keyframes`\n  from {\n    width: 0;\n  }\n  to {\n    width: ${ ({ amount }) => amount}%;\n  }\n`;\n\nconst Bar = styled.div`\n    background-color: #ff6c00;\n    width: ${ ({ amount }) => amount}%;\n    height: 0.2em;\n    position: relative;\n    animation: ${grow} 2s ease-in-out 1;\n`;\n\nconst Icon = styled.div`\n    width: 3em;\n`;\n\nconst Rest = styled.div`\n    background-color: #c3c3c3;\n    width: 100%;\n    height: 0.2em;\n    margin-left: 1em;\n`;\n\n\nexport default function Technologies({ name, amount }) {\n    return (\n        <div class=\"progress\">\n            <Icon>\n                <i class={\"fab fa-\"+name}></i>\n            </Icon>\n            <Rest amount={100 - amount}>\n                <Bar amount={amount}/>\n            </Rest>\n        </div>\n    )\n}","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport Technology from './Technology';\n\nexport default function Technologies(props) {\n    return (\n        <Fragment>\n            <br />\n            <fieldset>\n                <legend>Technologies&ensp;</legend>\n            </fieldset>\n            <div class=\"technologie\">\n                <Technology name=\"js\" amount={80}/>\n                <Technology name=\"react\" amount={75}/>\n                <Technology name=\"css3-alt\" amount={70}/>\n                <Technology name=\"html5\" amount={80}/>\n                <Technology name=\"laravel\" amount={40}/>\n                <Technology name=\"node\" amount={60}/>\n                <Technology name=\"npm\" amount={70}/>\n                <Technology name=\"sass\" amount={40}/>\n                <Technology name=\"linux\" amount={80}/>\n            </div>\n        </Fragment>\n    )\n}","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Header from './components/Header';\nimport Summary from './components/Summary';\nimport Skills from './components/Skills';\nimport Social from './components/Social';\nimport Technologies from './components/Technologies';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"right\">\n\t\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t\t<Social />\n\t\t\t\t\t\t\t<Technologies />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<Summary />\n\t\t\t\t\t\t<Skills />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}