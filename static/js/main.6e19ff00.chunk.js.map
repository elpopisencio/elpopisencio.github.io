{"version":3,"sources":["pages/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["Home","_useState","useState","_useState2","Object","slicedToArray","menuIsActive","setMenuIsActive","_useState3","_useState4","projectsIsActive","setProjectsIsActive","react_default","a","createElement","class","role","aria-label","href","aria-expanded","data-target","onClick","aria-hidden","id","App","pages_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2IAsFeA,EApFF,WAAM,IAAAC,EACsBC,oBAAS,GAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACXK,EADWH,EAAA,GACGI,EADHJ,EAAA,GAAAK,EAE8BN,oBAAS,GAFvCO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEXE,EAFWD,EAAA,GAEOE,EAFPF,EAAA,GAGlB,OACCG,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,SAASC,KAAK,aAAaC,aAAW,mBAChDL,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACVH,EAAAC,EAAAC,cAAA,KAAGC,MAAM,wBAAwBG,KAAK,KAAtC,gBAGAN,EAAAC,EAAAC,cAAA,KACCI,KAAK,KACLF,KAAK,SACLD,MAAM,uBACNE,aAAW,OACXE,gBAAc,QACdC,cAAY,qBACZC,QAAS,kBAAMd,GAAiBD,KAEhCM,EAAAC,EAAAC,cAAA,QAAMQ,cAAY,SAClBV,EAAAC,EAAAC,cAAA,QAAMQ,cAAY,SAClBV,EAAAC,EAAAC,cAAA,QAAMQ,cAAY,WAIpBV,EAAAC,EAAAC,cAAA,OACCS,GAAG,qBACHR,MAAO,gBAAkBT,GAAgB,cAEzCM,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBACVH,EAAAC,EAAAC,cAAA,KAAGI,KAAK,UAAUH,MAAM,eAAxB,UAIAH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,yCACVH,EAAAC,EAAAC,cAAA,KACCC,MAAM,cACNG,KAAK,KACLG,QAAS,kBAAMV,GAAqBD,KAHrC,YAQAE,EAAAC,EAAAC,cAAA,OACCC,MACC,qBACEL,GAAoB,oBAGvBE,EAAAC,EAAAC,cAAA,KAAGC,MAAM,cAAcG,KAAK,eAA5B,cAGAN,EAAAC,EAAAC,cAAA,KAAGC,MAAM,cAAcG,KAAK,kBAA5B,iBAGAN,EAAAC,EAAAC,cAAA,KAAGC,MAAM,cAAcG,KAAK,6BAA5B,4BAGAN,EAAAC,EAAAC,cAAA,KAAGC,MAAM,cAAcG,KAAK,iBAA5B,mBAOHN,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,eACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,gBAKfH,EAAAC,EAAAC,cAAA,WAASC,MAAM,QACdH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACVH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,aACVH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,SAAV,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,MAAM,YAAV,6BCvESS,MAJf,WACC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,OCQYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6e19ff00.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Home = () => {\n\tconst [menuIsActive, setMenuIsActive] = useState(false);\n\tconst [projectsIsActive, setProjectsIsActive] = useState(false);\n\treturn (\n\t\t<div class=\"container\">\n\t\t\t<nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n\t\t\t\t<div class=\"navbar-brand\">\n\t\t\t\t\t<a class=\"navbar-item is-size-5\" href=\"/\">\n\t\t\t\t\t\telpopisencio\n\t\t\t\t\t</a>\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#!\"\n\t\t\t\t\t\trole=\"button\"\n\t\t\t\t\t\tclass=\"navbar-burger burger\"\n\t\t\t\t\t\taria-label=\"menu\"\n\t\t\t\t\t\taria-expanded=\"false\"\n\t\t\t\t\t\tdata-target=\"navbarBasicExample\"\n\t\t\t\t\t\tonClick={() => setMenuIsActive(!menuIsActive)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span aria-hidden=\"true\"></span>\n\t\t\t\t\t\t<span aria-hidden=\"true\"></span>\n\t\t\t\t\t\t<span aria-hidden=\"true\"></span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tid=\"navbarBasicExample\"\n\t\t\t\t\tclass={'navbar-menu ' + (menuIsActive && 'is-active')}\n\t\t\t\t>\n\t\t\t\t\t<div class=\"navbar-start\">\n\t\t\t\t\t\t<a href=\"/resume\" class=\"navbar-item\">\n\t\t\t\t\t\t\tresume\n\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t<div class=\"navbar-item has-dropdown is-hoverable\">\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclass=\"navbar-link\"\n\t\t\t\t\t\t\t\thref=\"#!\"\n\t\t\t\t\t\t\t\tonClick={() => setProjectsIsActive(!projectsIsActive)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tprojects\n\t\t\t\t\t\t\t</a>\n\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclass={\n\t\t\t\t\t\t\t\t\t'navbar-dropdown ' +\n\t\t\t\t\t\t\t\t\t(!projectsIsActive && 'is-hidden-touch')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<a class=\"navbar-item\" href=\"/pagination\">\n\t\t\t\t\t\t\t\t\tpagination\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a class=\"navbar-item\" href=\"/checkbox-tree\">\n\t\t\t\t\t\t\t\t\tcheckbox-tree\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a class=\"navbar-item\" href=\"/keyboard-navigable-table\">\n\t\t\t\t\t\t\t\t\tkeyboard-navigable-table\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a class=\"navbar-item\" href=\"/connect-four\">\n\t\t\t\t\t\t\t\t\tconnect-four\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"navbar-end\">\n\t\t\t\t\t\t<div class=\"navbar-item\">\n\t\t\t\t\t\t\t<div class=\"buttons\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t\t<section class=\"hero\">\n\t\t\t\t<div class=\"hero-body\">\n\t\t\t\t\t<div class=\"container\">\n\t\t\t\t\t\t<h1 class=\"title\">Hi, I'm Jorge.</h1>\n\t\t\t\t\t\t<h2 class=\"subtitle\">And this is my page.</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t</div>\n\t);\n};\n\nexport default Home;\n","import React from 'react';\nimport Home from './pages/Home';\n\nfunction App() {\n\treturn <Home />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}